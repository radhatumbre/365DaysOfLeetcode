class Solution {
public:
    vector<int> primefactors(int n){
        vector<int> factors;
        vector<int> spf(1001, 0);
        for(long long i=2; i<=n; i++){
            spf[i]=i;
        }
        for(long long i=2; i<=n; i++){
            if(spf[i]==i){
                for(long long j=i*i; j<=n; j+=i){
                    if(spf[j]==j)
                        spf[j]= i;
                }
            }
        }

        // 50 -> 25 -> 5 -> 1
        while(n!=1){
            if(!count(factors.begin(), factors.end(), spf[n]))
                factors.push_back(spf[n]);
            n = n/spf[n];
        }
        return factors;
    }
    int distinctPrimeFactors(vector<int>& nums) {
        vector<int> ans;
        for(int i=0 ;i<nums.size(); i++){
            vector<int> facts = primefactors(nums[i]);
            for(int j=0; j<facts.size(); j++){
                if(!count(ans.begin(), ans.end(), facts[j]))
                    ans.push_back(facts[j]);
            }
        }
        return ans.size();
    }
};







