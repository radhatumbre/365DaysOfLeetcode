/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
        ListNode* temp = head;
        int i=0;
        while(temp!=0){
            i++;
            temp=temp->next;
        }
        if(i==1)
            return NULL;
        int mid = (i+2)/2;
        temp = head;
        ListNode* ptr = NULL;
        i=1;
        cout<<mid<<endl;
        while (temp != NULL && i<mid)
        {
            i++;
            ptr = temp;
            temp = temp->next;
        }
        ptr->next = temp->next;
        return head;
    }
};
