class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> map;
        for (auto i : nums)
            map[i]++;
        
        vector<int> ans;
        vector<pair<int, int>> freq;
        unordered_map<int, int>::iterator itr;
        for (itr = map.begin(); itr != map.end(); itr++) {
            // itr->first stores the key part and
            // itr->second stores the value part
            freq.push_back(make_pair(itr->second, itr->first));
        }
        sort(freq.begin(), freq.end());
        int i=freq.size()-1;
        while(k>0){
            ans.insert(ans.begin(), freq[i].second);
            i--;
            k--;
        }
        
        return ans;
    }
};
