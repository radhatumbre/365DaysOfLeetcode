class Solution {
    public List<Integer> twoOutOfThree(int[] nums1, int[] nums2, int[] nums3) {
        HashSet<Integer> set1 = new HashSet<Integer>();
        HashSet<Integer> set2 = new HashSet<Integer>();
        HashSet<Integer> set3 = new HashSet<Integer>();

        for(int i=0; i<nums1.length; i++){
            set1.add(nums1[i]);
        }
        for(int i=0; i<nums2.length; i++){
            set2.add(nums2[i]);
        }
        for(int i=0; i<nums3.length; i++){
            set3.add(nums3[i]);
        }
        List<Integer> ans = new ArrayList<>();
        for(int i=0; i<101; i++){
            if((set1.contains(i) && set2.contains(i)) || (set1.contains(i) && set3.contains(i)) || (set2.contains(i) && set3.contains(i)) )
                ans.add(i);
        }
        return ans;
    }
}
