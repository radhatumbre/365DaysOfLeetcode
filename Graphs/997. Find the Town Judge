class Solution {
public:

    // Adjacency List
    vector<list<int> > adj;
    void addEdge(int u, int v){
        adj[u].push_back(v);
    }

    int findJudge(int n, vector<vector<int>>& trust) {
        adj.resize(n+1);
        for(int i=0; i<trust.size(); i++){
            addEdge(trust[i][0],trust[i][1]);
        }

        // finding townJudge
        int townJudge = -1;
        for(int i=1; i<n+1; i++){
            if(adj[i].empty())
                townJudge= i;
        }

        // everybody trust townJudge
        for(int i=1; i<n+1; i++){
            if(i==townJudge)
                continue;

            list<int>::iterator pos;
            pos = find(adj[i].begin(), adj[i].end(), townJudge);
            if(pos != adj[i].end())
                continue;
            else return -1;
        }
        return townJudge;
    }
};
